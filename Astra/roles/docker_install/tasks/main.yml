# Role: docker_install/tasks/main.yml
- name: Install docker
  apt:
    name: docker.io
    update_cache: yes
  notify: Restart docker
  tags: [docker]

- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none
  tags: [prepare_hosts]

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0
  tags: [prepare_hosts]

- name: Mask dev-sda3.swap
  shell: systemctl mask dev-sda3.swap
  tags: [prepare_hosts]

- name: Write config net 1
  copy:
    dest: "/etc/modules-load.d/k8s.conf"
    content: |
      br_netfilter
  tags: [prepare_hosts]

- name: Write config net 2
  copy:
    dest: "/etc/sysctl.d/k8s.conf"
    content: |
      net.bridge.bridge-nf-call-iptables = 1
  tags: [prepare_hosts]

- name: Reboot server
  shell: sleep 2 && reboot
  async: 1
  poll: 0
  failed_when: false
  become: true
  tags: [prepare_hosts]

- name: Wait for server to initiate shutdown
  wait_for:
    host: "{{ ansible_ssh_host }}"
    state: stopped
    port: 22
  delegate_to: localhost
  tags: [prepare_hosts]

- name: Wait for server to come back online
  wait_for:
    host: "{{ ansible_ssh_host }}"
    state: started
    port: 22
  delegate_to: localhost
  tags: [prepare_hosts]

- name: Start net1
  command: "sh -c 'modprobe overlay'"
  tags: [prepare_hosts]

- name: Start net2
  command: "sh -c 'modprobe br_netfilter'"
  tags: [prepare_hosts]

- name: Configure sysctl.conf
  replace:
    path: "/etc/sysctl.conf"
    regexp: "#net.ipv4.ip_forward=1"
    replace: "net.ipv4.ip_forward=1"
  tags: [prepare_hosts]

- name: Initialize network config
  command: "sh -c 'sysctl --system'"
  tags: [prepare_hosts]

- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - curl
  tags: [prepare_hosts]